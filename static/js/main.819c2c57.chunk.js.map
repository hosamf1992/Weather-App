{"version":3,"sources":["logo.svg","cmps/MainWeather/MainWeather.js","cmps/TodayWeather/TodayWeather.js","cmps/NextDays/NextDays.js","cmps/WeatherList/WeatherList.js","pages/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","className","src","items","map","contact","HomePage","state","React","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sQAAAA,EAAOC,QAAU,IAA0B,kC,gLCG5B,G,YAAA,WACX,OACI,6BAASC,UAAU,gBACf,yBAAKA,UAAU,iBACX,gDACA,wDAEJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAAYC,IAAI,iDAEnC,yBAAKD,UAAU,6CACX,uCACA,6CAIZ,yBAAKA,UAAU,0CACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YAAf,UACA,yBAAKA,UAAU,cAAf,QAEJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAAf,OACA,yBAAKA,UAAU,cAAf,SAEJ,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,YAAf,SACA,yBAAKA,UAAU,cAAf,YAEJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YAAf,UACA,yBAAKA,UAAU,cAAf,QAEJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAAf,OACA,yBAAKA,UAAU,cAAf,SAGJ,yBAAKA,UAAU,eACX,yBAAKA,UAAU,YAAf,SACA,yBAAKA,UAAU,cAAf,iBC5Cb,G,YAAA,WACX,OACI,yBAAKA,UAAU,4CACP,yBAAKA,UAAU,gBAAf,WACA,yBAAKC,IAAI,gDACT,yBAAKD,UAAU,gBAAf,aCLD,G,MAAA,WACX,OACI,yBAAKA,UAAU,2CACP,yBAAKA,UAAU,SACX,yBAAKA,UAAU,YAAf,OACA,yBAAKA,UAAU,cAAf,UAEJ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,QAAQC,IAAI,iDAE/B,yBAAKD,UAAU,SACX,yBAAMA,UAAU,YAAhB,UACA,yBAAKA,UAAU,cAAf,QAEJ,yBAAKA,UAAU,SACX,yBAAMA,UAAU,YAAhB,UACA,yBAAKA,UAAU,cAAf,QAEJ,yBAAKA,UAAU,SACX,yBAAMA,UAAU,YAAhB,OACA,yBAAKA,UAAU,cAAf,SAEJ,yBAAKA,UAAU,SACX,yBAAMA,UAAU,YAAhB,OACA,yBAAKA,UAAU,cAAf,YCvBL,aACX,IAAME,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAE,GAC7B,OACI,6BAASF,UAAU,gBACf,yBAAKA,UAAU,SAAf,kBACA,yBAAKA,UAAU,cACVE,EAAMC,KAAI,SAAAC,GACP,OACI,kBAAC,EAAD,UAIZ,yBAAKJ,UAAU,SAAf,aACA,6BAASA,UAAU,cAClBE,EAAMC,KAAI,SAAAC,GACH,OACI,kBAAC,EAAD,YChBHC,E,2MACjBC,MAAQ,G,oNAUJ,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAdsBC,IAAMC,W,YCW7BC,MARf,WACE,OACE,6BAAST,UAAU,kBACd,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWP,MCEtBQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.819c2c57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport './MainWeather.scss'\r\n\r\nexport default function () {\r\n    return (\r\n        <section className=\"main-weather\">\r\n            <div className=\"date-location\">\r\n                <h1 >Tel Aviv, Israel</h1>\r\n                <span >Tuesday 31th December</span>\r\n            </div>\r\n            <div className=\"weather-details\">\r\n                <div className=\" divider first-panel\">\r\n                    <div className=\"flex flex-row align-center space-around\">\r\n                        <div className=\"icon-temp\">\r\n                            <img className=\"main-icon\" src=\"http://openweathermap.org/img/wn/02d@2x.png\" />\r\n                        </div>\r\n                        <div className=\"degree-summary flex  flex-col flex-center\">\r\n                            <div>25&#176;</div>\r\n                            <div>Sunny day</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"second-panel flex flex-col flex-center\">\r\n                    <div className=\"temp-stat\">\r\n                        <div className=\"stat min\">\r\n                            <div className=\"stat-val\">20&#176;</div>\r\n                            <div className=\"stat-label\">Min</div>\r\n                        </div>\r\n                        <div className=\"stat rain\">\r\n                            <div className=\"stat-val\">20%</div>\r\n                            <div className=\"stat-label\">Rain</div>\r\n                        </div>\r\n                        <div className=\"stat sunrise\">\r\n                            <div className=\"stat-val\">05:30</div>\r\n                            <div className=\"stat-label\">Sunrise</div>\r\n                        </div>\r\n                        <div className=\"stat max\">\r\n                            <div className=\"stat-val\">40&#176;</div>\r\n                            <div className=\"stat-label\">Max</div>\r\n                        </div>\r\n                        <div className=\"stat wind\">\r\n                            <div className=\"stat-val\">20%</div>\r\n                            <div className=\"stat-label\">Wind</div>\r\n                        </div>\r\n\r\n                        <div className=\"stat sunset\">\r\n                            <div className=\"stat-val\">20:30</div>\r\n                            <div className=\"stat-label\">Sunset</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\nimport './TodayWeather.scss'\r\n\r\nexport default function () {\r\n    return (\r\n        <div className=\"today-details flex flex-col align-center\">\r\n                <div className=\"today-detail\">3:00 AM</div>\r\n                <img src=\"http://openweathermap.org/img/wn/02d@2x.png\" />\r\n                <div className=\"today-detail\">25&#176;</div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './NextDays.scss'\r\n\r\nexport default function () {\r\n    return (\r\n        <div className=\"next-details flex space-around flex-row\">\r\n                <div className=\"items\">\r\n                    <div className=\"item-val\">Tue</div>\r\n                    <div className=\"item-label\">01/01</div>\r\n                </div>\r\n                <div className=\"items\">\r\n                    <img className=\"items\" src=\"http://openweathermap.org/img/wn/02d@2x.png\" />\r\n                </div>\r\n                <div className=\"items\">\r\n                    <div  className=\"item-val\">20&#176;</div>\r\n                    <div className=\"item-label\">Min</div>\r\n                </div>\r\n                <div className=\"items\">\r\n                    <div  className=\"item-val\">20&#176;</div>\r\n                    <div className=\"item-label\">Max</div>\r\n                </div>\r\n                <div className=\"items\">\r\n                    <div  className=\"item-val\">20%</div>\r\n                    <div className=\"item-label\">Rain</div>\r\n                </div>\r\n                <div className=\"items\">\r\n                    <div  className=\"item-val\">20%</div>\r\n                    <div className=\"item-label\">Wind</div>\r\n                </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport './WeatherList.scss'\r\nimport TodayWeather from '../TodayWeather/TodayWeather'\r\nimport NextDays from '../NextDays/NextDays'\r\nexport default function () {\r\n    const items = [1, 2, 3, 4, 5,6]\r\n    return (\r\n        <section className=\"weather-list\">\r\n            <div className=\"title\">Hourly Weather</div>\r\n            <div className=\"today-list\" >\r\n                {items.map(contact => {\r\n                    return (\r\n                        <TodayWeather />\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"title\">Next Days</div>\r\n            <section className=\"daily-list\">\r\n            {items.map(contact => {\r\n                    return (\r\n                        <NextDays />\r\n                    )\r\n                })}\r\n          </section>\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './HomePage.scss';\r\nimport MainWeather from '../../cmps/MainWeather/MainWeather'\r\nimport WeatherList from '../../cmps/WeatherList/WeatherList'\r\nexport default class HomePage extends React.Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <MainWeather />\r\n                <WeatherList />\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport { Route } from 'react-router-dom'\nimport HomePage from './pages/HomePage/HomePage'\n\nimport logo from './logo.svg';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <section className=\"main-container\">\n         <Route exact path=\"/\" component={HomePage} />\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter as Router } from 'react-router-dom'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}